{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nfunction getPreviousDay(date = new Date()) {\n  const previous = new Date(date.getTime());\n  previous.setDate(date.getDate() - 1);\n  return previous;\n}\nconst todayDate = () => {\n  const date = getPreviousDay(new Date());\n  return `${date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()}-${date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1}-${date.getFullYear()}`;\n};\nexport const searchParamSlice = createSlice({\n  name: 'searchParam',\n  initialState: {\n    searchParam: {\n      search: \"\",\n      date: todayDate(),\n      category: \"all\",\n      source: \"all\"\n    }\n  },\n  reducers: {\n    setSearchParam: (state, action) => {\n      return {\n        ...state,\n        searchParam: action.payload\n      };\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  setSearchParam\n} = searchParamSlice.actions;\nexport default searchParamSlice.reducer;","map":{"version":3,"names":["createSlice","getPreviousDay","date","Date","previous","getTime","setDate","getDate","todayDate","getMonth","getFullYear","searchParamSlice","name","initialState","searchParam","search","category","source","reducers","setSearchParam","state","action","payload","actions","reducer"],"sources":["/Users/jawadrana/Desktop/Innoscripta/innoscripta-frontend/src/redux/searchParam/searchParamSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nfunction getPreviousDay(date = new Date()) {\n  const previous = new Date(date.getTime());\n  previous.setDate(date.getDate() - 1);\n  return previous;\n}\n\nconst todayDate = () => {\n    const date = getPreviousDay(new Date())\n    return `${date.getDate()< 10 ? `0${date.getDate()}` : date.getDate()}-${date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1}-${date.getFullYear()}`\n}\n\nexport const searchParamSlice = createSlice({\n  name: 'searchParam',\n  initialState: {\n    searchParam: {\n        search: \"\",\n        date: todayDate(),\n        category: \"all\",\n        source: \"all\"\n    }\n  },\n  reducers: {\n    setSearchParam: (state, action) => { \n        return { \n            ...state,\n            searchParam : action.payload \n        }\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { setSearchParam } = searchParamSlice.actions\n\nexport default searchParamSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,cAAcA,CAACC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,EAAE;EACzC,MAAMC,QAAQ,GAAG,IAAID,IAAI,CAACD,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;EACzCD,QAAQ,CAACE,OAAO,CAACJ,IAAI,CAACK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;EACpC,OAAOH,QAAQ;AACjB;AAEA,MAAMI,SAAS,GAAGA,CAAA,KAAM;EACpB,MAAMN,IAAI,GAAGD,cAAc,CAAC,IAAIE,IAAI,CAAC,CAAC,CAAC;EACvC,OAAQ,GAAED,IAAI,CAACK,OAAO,CAAC,CAAC,GAAE,EAAE,GAAI,IAAGL,IAAI,CAACK,OAAO,CAAC,CAAE,EAAC,GAAGL,IAAI,CAACK,OAAO,CAAC,CAAE,IAAGL,IAAI,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,GAAI,IAAGP,IAAI,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAE,EAAC,GAAGP,IAAI,CAACO,QAAQ,CAAC,CAAC,GAAG,CAAE,IAAGP,IAAI,CAACQ,WAAW,CAAC,CAAE,EAAC;AAC9K,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAGX,WAAW,CAAC;EAC1CY,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,WAAW,EAAE;MACTC,MAAM,EAAE,EAAE;MACVb,IAAI,EAAEM,SAAS,CAAC,CAAC;MACjBQ,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAE;IACZ;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,OAAO;QACH,GAAGD,KAAK;QACRN,WAAW,EAAGO,MAAM,CAACC;MACzB,CAAC;IACL;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEH;AAAe,CAAC,GAAGR,gBAAgB,CAACY,OAAO;AAE1D,eAAeZ,gBAAgB,CAACa,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}